#!/usr/bin/env bash

function usage() {
    cat << EOF
usage: $0 options

This script installs dotfiles in your user directory

OPTIONS:
-h Show this message
-q Quiet
EOF
}

function log() {
    builtin echo $@
}

function update() {
    log Updating...

    pushd "$1" > /dev/null

    # if [ detect dirty work tree ]; then
    #    log - Work tree is dirty, stashing
    #    git stash > /dev/null 2>&1
    # fi

    if [ master != "$(git rev-parse --abbrev-ref HEAD)" ]; then
        log - HEAD is not "master"
        # git checkout master > /dev/null 2>&1
    fi

    # log - Pull from origin/master
    # git pull origin master 1> /dev/null 2>&1

    # if [ previous branch wasnt master ]; then
    #     git checkout previous_branch > /dev/null 2>&1
    # fi

    # if [ work tree was dirty ]; then
    #     git stash pop > /dev/null 2>&1
    # fi

    popd > /dev/null
}

function locate() {
    local SOURCE="$1"
    local TARGET

    while [ -h "$SOURCE" ]; do
        TARGET="$(readlink "$SOURCE")"
        if [[ $SOURCE == /* ]]; then
            SOURCE="$TARGET"
        else
            SOURCE="$(dirname "$SOURCE")/$TARGET"
        fi
    done

    echo $SOURCE
}

function copy_files() {
    rsync -a --no-perms "$1" "$2"${3:+ --exclude="$3"}
}

function install() {
    log Installing...
    if [ -d "$1/install.d" ]; then
        for FILE in $1/install.d/*.sh; do
            if [ -r "$FILE" ]; then
                log - Module $(basename "$FILE")
                if [ -h "$FILE" ]; then
                    FILE=$(locate "$FILE")
                fi
                . "$FILE" "$(cd "$(dirname "$FILE")" && pwd)" $2
            fi
        done
    fi
}

while getopts "hq" OPTION
do
    case $OPTION in
        h)    usage
            exit 1
            ;;
        q)    function log() {
                # Overload function so no extra info will be echoed
                return
            }
            ;;
    esac
done

SOURCE=$(dirname "$BASH_SOURCE")
if [ -f "$SOURCE/install.conf" ]; then
  source "$SOURCE/install.conf"
fi

FROM=$SOURCE
TO=~/

update "$FROM"
install "$FROM" "$TO"
